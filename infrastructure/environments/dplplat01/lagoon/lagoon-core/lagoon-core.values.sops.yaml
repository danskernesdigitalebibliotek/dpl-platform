# These values must be set on install, as they don't have sensible defaults.
#ENCRYPT
harborAdminPassword: ENC[AES256_GCM,data:h6FNLhp7Swu6W/HmfWteWw==,iv:MkGnaoEom9anqR3T100rqKLPoii8hpwQPs1MxZHeXbY=,tag:7hU8Y7MB4TQI/crmz2Pqkw==,type:str]
elasticsearchURL: none
#ENCRYPT
harborURL: ENC[AES256_GCM,data:8NKL/o9MThKtqZRAA0X3SBhaLm2DNCyVMVK188fcc/XnYYP/cJjhksAunOE=,iv:dfpu7XaoqTumkorjj+bY30m73hO2gwyDf5edS15fBB0=,tag:s6uLnSU8YgX7shgLV2/y4A==,type:str]
kibanaURL: none
#ENCRYPT
s3BAASSecretAccessKey: ENC[AES256_GCM,data:q9hDdN0b76o4TwSSEskqG921HF9vWw==,iv:c1Emz/nRh1W2TpUiEZlq945OwNlTKssJZr4STS/K1F8=,tag:pDS6oOAgG2eCb45MR5ljug==,type:str]
#ENCRYPT
s3BAASAccessKeyID: ENC[AES256_GCM,data:V48bX9+KH8SLcpbNzocx2X/ui4XAew==,iv:Cxb/7V+HEml4tSQFHmylGNQ/WDBG4NjHVW8AritXhxs=,tag:ml0Jew03TYgFCu69aQ7hNg==,type:str]
#ENCRYPT
s3FilesAccessKeyID: ENC[AES256_GCM,data:EjqmhTGdJ72wPAyFB1j+7MzF6+CWDQ==,iv:2pdr8+NbxXOAutb4N9aKyv/qXxy19uAmmHF1M/5/E9Y=,tag:62hdQ8OKRpB0p8414A8+4Q==,type:str]
#ENCRYPT
s3FilesBucket: ENC[AES256_GCM,data:0bvzEwwp8VEvMxjG,iv:K2I7V1r/+mof15fy1kQRicWVHRaT/AlsCtJddyQQqEU=,tag:sMpZumkbAPP1fZTrdhcJmQ==,type:str]
#ENCRYPT
s3FilesHost: ENC[AES256_GCM,data:7iPASBkzwVT6BnsVY0rPNizuvLKMjnZKx5YLpexyxQ4pP+KIiFe9XSJFgYU=,iv:t4sr1khpZT7w4uQU1EZrhG+FZWieaF2ASSjMT2spXzI=,tag:QdT5adpHtnZ+J/n9Nv/7/g==,type:str]
#ENCRYPT
s3FilesSecretAccessKey: ENC[AES256_GCM,data:7W+PrgINvUsErwk5vuCu30rUOlc2xQ==,iv:pYjlfkR+jSVGRjkhgpuG4ZaqO42KjEgmelDWpH36J68=,tag:Y1xprA5RlEmQWQz0fEfWfA==,type:str]
#ENCRYPT
registry: ENC[AES256_GCM,data:lUUDtcLOhNs=,iv:I5v1z7HA1ByzEVS8H5L1WuHDEzSXK1QMnEJMV4skPbY=,tag:oAHRS6u5hSmof7b/ZntIlw==,type:str]
# These values are optional.
# overwriteActiveStandbyTaskImage:
# appspecific discovery.json settings
# This should point to the publicly accessible ssh endpoint as a schema-less
# URI (either domain or IP) for the ssh-token (or fallback ssh) service
# e.g. ssh-token.example.com, ssh.example.com or 192.168.0.100
# The port will be read from the sshToken (or ssh) port value
# sshTokenEndpoint:
# These values are optional depending on the services Lagoon is integrated with
# in your environment.
# gitlabAPIToken:
# gitlabAPIURL:
# bitbucketAPIToken:
# bitbucketAPIURL:
# s3Region:
# These values may be set on install, otherwise the chart tries to guess
# sensible defaults.
# keycloakFrontEndURL: https://keycloak.example.com
# lagoonAPIURL: https://api.example.com/graphql
# lagoonUIURL: https://ui.example.com
# lagoonWebhookURL: https://webhook-handler.example.com
# These values are randomly generated on install if not otherwise defined.
#ENCRYPT
apiDBPassword: ENC[AES256_GCM,data:l2uSV8FlRIlFJ0Ez3Uh7AwwolS25THviydXr5wOkPwI=,iv:EnJIXujuJ20ysr6kaOCbBS28hok+saKLO/MFQHHbw8s=,tag:bNgO18LlwRwcTG2VYET8TQ==,type:str]
#ENCRYPT
jwtSecret: ENC[AES256_GCM,data:U9o3ii/YVKqa6E20P0WwgWgB3x7RhEXOnfgsLo97x5o=,iv:RqvFhecrI5YxUIm2KIqHyOvlANqaqa9NeqQTmQRv6vI=,tag:gE4GyOShzq7hbZetb3Z16w==,type:str]
#ENCRYPT
keycloakAdminPassword: ENC[AES256_GCM,data:nukHVvoAjB9USAFzf2c1ZA==,iv:UrZT90KKjWsBcmC5BRtBQFi729xxOusF93Qz9D+lltg=,tag:pPJClDGxAJtUP5QuMXDQSA==,type:str]
#ENCRYPT
keycloakAPIClientSecret: ENC[AES256_GCM,data:jNZ3XpkftUz21qhnCLcEaP1LhLYFRvWZzDmS3K33wpwPZw1K,iv:mo9kPRnknUnCg9aEKvnVvgtB/WfAGcGyMAA2+evF6tQ=,tag:l420lqH29bE8y3zaH4AWTg==,type:str]
#ENCRYPT
keycloakAuthServerClientSecret: ENC[AES256_GCM,data:f0vMlL/rKpSz9A/ATPoQH6hG2cCXtE8kJrq8jZmZasVV1Hr2,iv:BfWVJ3v0j6Y5gGAn8sppsef/+pSk2WpvBZYNGdwi794=,tag:6z5XtXk2ubkxEI776xDSzw==,type:str]
#ENCRYPT
keycloakDBPassword: ENC[AES256_GCM,data:8oS1tvojLw6rtsU1PdtPmi+V2j1BgktpzgcLg45hp9w=,iv:9VRvB2unM19KmYXMZRfmrumEUuNyULO7KcrsBJOBxmI=,tag:LM163JV1YILBm/LdngvaEQ==,type:str]
#ENCRYPT
keycloakLagoonAdminPassword: ENC[AES256_GCM,data:JnUKSBm8HTtJ6mRmXpBJeLmsIurc4ARfUxwYhMwG3i0=,iv:CKWupxuYLN4hlB4OiGlnmaPF/hOSqjt6vjVoEuabU14=,tag:xw8GfRykHfUL1jOfp0EZ2w==,type:str]
#ENCRYPT
logsDBAdminPassword: ENC[AES256_GCM,data:3V2A2n7zmleaew==,iv:bz+EGLPT8rabuMcHJjzhvUmPuxLOGn/RH87BPQ/ZjJI=,tag:buthGNBwDFeIe4fLBrh18Q==,type:str]
#ENCRYPT
keycloakLagoonOpensearchSyncClientSecret: ENC[AES256_GCM,data:BqsMFwCqMBJPVEMGjxZ+HcTuDh6WqG9omYnJtlDzhCLLInN6,iv:V89Y1t0drMZwhOEp74nYcTmyXhwTTvNhPjYdo6pUpx8=,tag:OVb+Qym6H74mc1O1/RnB/w==,type:str]
#ENCRYPT
keycloakServiceAPIClientSecret: ENC[AES256_GCM,data:IOOTgREK08zI3ueqxsOWRVGmOokYOuOJG5NTvj0cyP1ZjlIA,iv:Olqb+72c8ZuzQZYiYTCUoXkXWTin62uuD/G8eh7tzT0=,tag:tO2iBWXvhwWxNdEQ4/5SMQ==,type:str]
#ENCRYPT
rabbitMQPassword: ENC[AES256_GCM,data:0hvuq+7XAIBOqpiv2EOC0chQbybsdnFRn2W1LhvZK1c=,iv:IJgbjVYTaAJeBDVc9pZ/UWx2p/t6wuFOEOu5DT9Z1h8=,tag:kKuvr892kwVNp/UEli3/VQ==,type:str]
#ENCRYPT
redisPassword: ENC[AES256_GCM,data:tFSNpPEG3EpLW4ABBd61Ku3IoAIbKajbhDNV5pLWRxk=,iv:wTQYPXrjKZ0zRwss9XCfZv61Jw+crl1VM5wMakJvyoU=,tag:TcpTG1ie11WHrRRzY8ksEg==,type:str]
#ENCRYPT
k8upBackupBucketName: ENC[AES256_GCM,data:QfI1Lu68A3q1yrIahBsc2o0c21+L88Yukg==,iv:MWqZTn8ZJB3iUa2zqTu3UslqSTVo4I+qobhJu2gaMBE=,tag:Go1GcMUIEWdIVI0lTcAGjg==,type:str]
# This value is set to match jwtSecret on existing installs if not defined.
# It should only ever be set here for backwards compatibility.
#ENCRYPT
projectSeed: ENC[AES256_GCM,data:/LuyvfLBIL1XXVen4rOLS49Wy8oWOGah+/MIqaMnOb0=,iv:ZuGfXelgTbVY4L3Y/PuWH5y5qgOgNfe2v8FZBb2gmpc=,tag:XT+Iq9X1qIJg1BVz4L3kog==,type:str]
# These values are the chart defaults, but can be overridden.
imagePullSecrets: []
rabbitMQUsername: lagoon
k8upS3Endpoint: ""
#ENCRYPT
keycloakAdminUser: ENC[AES256_GCM,data:O9Qihpw=,iv:leRex1iG9AbfzXt2hrsL5N5uguM19JF2cWIQrFloWeY=,tag:jnUbTfbN985onGyAn6KyIA==,type:str]
# this is required if email sending is to be enabled in keycloak
# keycloakAdminEmail: admin@example.com
buildDeployImage:
    edge:
        enabled: false
# Set to an empty string to support Harbor v1.x.x
harborAPIVersion: v2.0
# this default podSecurityContext is set for all services and can be overridden
# on the service level.
podSecurityContext:
    fsGroup: 10001
    runAsGroup: 0
    runAsUser: 10000
# Set the default ingressClass for the exposed lagoon-core services
# it can be overridden per-service if needed via ingress.ingressClassName
# Note that this is the Class, not the IngressName
# defaultIngressClassName: nginx
# this default image tag is set for all services and can be overridden
# on the service level, if not set it falls back to chart appVersion.
imageTag: ""
# This value is false by default, which means that Developers can SSH to
# Development environments as per the Lagoon documentation
# (https://docs.lagoon.sh/administering-lagoon/rbac/#developer).
# Set this to true to:
# * block Developers from SSH access to Lagoon environments; and
# * stop Developers from getting a redirect message when trying to SSH into the
#   ssh-token service.
# blockDeveloperSSH: false
# the following services are part of the lagoon-core chart
api:
    replicaCount: 2
    image:
        repository: uselagoon/api
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    service:
        type: ClusterIP
        port: 80
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
        hosts:
            - host: api.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: api-tls
              hosts:
                - api.lagoon.dplplat01.dpl.reload.dk
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 256Mi
            cpu: 500m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
apiDB:
    image:
        repository: uselagoon/api-db
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    service:
        type: ClusterIP
        port: 3306
    podAnnotations:
        appuio.ch/backupcommand: |
            /bin/sh -c "mysqldump --max-allowed-packet=500M --events --routines --quick --add-locks --no-autocommit --single-transaction --all-databases"
        backup.appuio.ch/file-extension: .api-db.sql
    securityContext: {}
    resources:
        requests:
            memory: 512Mi
            cpu: 500m
    additionalEnvs: null
    #   FOO: Bar
    storageSize: 128Gi
    terminationGracePeriodSeconds: 30
    startupProbe:
        # 60*10s period = 10 minutes
        failureThreshold: 60
        exec:
            command:
                - test
                - -f
                - /tmp/mariadb-init-complete
    livenessProbe:
        exec:
            command:
                - mysqladmin
                - --connect-timeout=4
                - ping
    readinessProbe:
        exec:
            command:
                - /usr/share/container-scripts/mysql/readiness-probe.sh
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
apiRedis:
    image:
        repository: uselagoon/api-redis
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 64Mi
            cpu: 50m
    additionalEnvs: null
    #   FOO: Bar
    persistence:
        enabled: false
        size: 100Mi
    service:
        type: ClusterIP
        port: 6379
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
keycloak:
    # keycloak realm and email settings configuration
    realmSettings:
        enabled: false
        # the full list of config settings is available TODO
        options:
            resetPasswordAllowed: true
            rememberMe: true
    email:
        enabled: false
        settings:
            host: mailhog
            port: "1025"
            from: lagoon@example.com
            fromDisplayName: Lagoon
            replyTo: lagoon@example.com
            ssl: "false"
            starttls: "false"
            auth: "false"
    replicaCount: 1
    image:
        repository: uselagoon/keycloak
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 1Gi
            cpu: 500m
    additionalEnvs: null
    #   FOO: Bar
    service:
        type: ClusterIP
        port: 8080
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
        hosts:
            - host: keycloak.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: keycloak-tls
              hosts:
                - keycloak.lagoon.dplplat01.dpl.reload.dk
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
keycloakDB:
    replicaCount: 1
    image:
        repository: uselagoon/keycloak-db
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    service:
        type: ClusterIP
        port: 3306
    podAnnotations:
        appuio.ch/backupcommand: |
            /bin/sh -c "mysqldump --max-allowed-packet=500M --events --routines --quick --add-locks --no-autocommit --single-transaction --all-databases"
        backup.appuio.ch/file-extension: .keycloak-db.sql
    securityContext: {}
    resources:
        requests:
            memory: 512Mi
            cpu: 100m
    additionalEnvs: null
    #   FOO: Bar
    terminationGracePeriodSeconds: 30
    startupProbe:
        # 60*10s period = 10 minutes
        failureThreshold: 60
        tcpSocket:
            port: mariadb
    livenessProbe:
        exec:
            command:
                - mysqladmin
                - --connect-timeout=4
                - ping
    readinessProbe:
        exec:
            command:
                - /usr/share/container-scripts/mysql/readiness-probe.sh
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
broker:
    replicaCount: 3
    image:
        repository: uselagoon/broker
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    service:
        type: ClusterIP
        ports:
            epmd: 4369
            amqp: 5672
            http: 15672
            metrics: 15692
        amqpExternal:
            enabled: false
            type: LoadBalancer
            port: 5672
    serviceMonitor:
        enabled: false
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 1Gi
            cpu: 500m
    additionalEnvs: null
    #   FOO: Bar
    serviceAccount:
        # Annotations to add to the service account
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: ""
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
        hosts:
            - host: broker.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: broker-tls
              hosts:
                - broker.lagoon.dplplat01.dpl.reload.dk
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
authServer:
    replicaCount: 2
    image:
        repository: uselagoon/auth-server
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    service:
        type: ClusterIP
        port: 80
        annotations: {}
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 64Mi
            cpu: 50m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
webhooks2tasks:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/webhooks2tasks
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 64Mi
            cpu: 50m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
webhookHandler:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/webhook-handler
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 64Mi
            cpu: 50m
    additionalEnvs: null
    #   FOO: Bar
    service:
        type: ClusterIP
        port: 3000
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
        hosts:
            - host: webhookhandler.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: webhookhandler-tls
              hosts:
                - webhookhandler.lagoon.dplplat01.dpl.reload.dk
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
ui:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/ui
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 128Mi
            cpu: 50m
    additionalEnvs: null
    #   FOO: Bar
    service:
        type: ClusterIP
        port: 3000
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
        hosts:
            - host: ui.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: ui-tls
              hosts:
                - ui.lagoon.dplplat01.dpl.reload.dk
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
actionsHandler:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/actions-handler
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    additionalEnvs: null
    #   FOO: Bar
    resources:
        requests:
            memory: 16Mi
            cpu: 10m
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
backupHandler:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/backup-handler
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 32Mi
            cpu: 50m
    additionalEnvs: null
    #   FOO: Bar
    service:
        type: ClusterIP
        port: 3000
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
        hosts:
            - host: backuphandler.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: backuphandler-tls
              hosts:
                - backuphandler.lagoon.dplplat01.dpl.reload.dk
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
insightsHandler:
    enabled: false
    replicaCount: 2
    image:
        repository: uselagoon/insights-handler
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.0.4
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 32Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    trivy:
        enabled: false
        image:
            repository: aquasec/trivy
            tag: 0.48.0
        service:
            type: ClusterIP
            port: 4954
logs2notifications:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/logs2notifications
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    logs2slack:
        disabled: true
    logs2rocketchat:
        disabled: true
    logs2microsoftteams:
        disabled: true
    logs2email:
        disabled: true
    logs2webhooks:
        disabled: true
    logs2s3:
        disabled: false
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 16Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
drushAlias:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/drush-alias
        pullPolicy: Always
        # Overrides the image tag whose default is "latest".
        tag: v3.1.0
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 8Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
    service:
        type: ClusterIP
        port: 8080
    ingress:
        enabled: true
        annotations:
            kubernetes.io/tls-acme: "true"
            kubernetes.io/ingress.class: nginx
        hosts:
            - host: drushalias.lagoon.dplplat01.dpl.reload.dk
              paths:
                - /
        tls:
            - secretName: drushalias-tls
              hosts:
                - drushalias.lagoon.dplplat01.dpl.reload.dk
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
ssh:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/ssh
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 128Mi
            cpu: 500m
    additionalEnvs: null
    #   FOO: Bar
    service:
        type: LoadBalancer
        port: 22
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
workflows:
    enabled: true
    replicaCount: 2
    image:
        repository: uselagoon/workflows
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 16Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
nats:
    enabled: false
    # inject additional config
    additionalVolumes:
        - name: lagoon-core-nats-tls
          secret:
            secretName: lagoon-core-nats-tls
    additionalVolumeMounts:
        - name: lagoon-core-nats-tls
          mountPath: /etc/lagoon-core-nats-tls
    nats:
        config:
            - name: lagoon-core
              secret:
                secretName: lagoon-core-nats-conf
    cluster:
        enabled: true
        name: lagoon-core
        # internal cluster IPs are not routable, so don't advertise them
        noAdvertise: true
    natsbox:
        enabled: false
    # to connect to nats, pods must have the right label
    networkPolicy:
        enabled: true
        allowExternal: false
        # allow inbound leaf connections
        extraIngress:
            - ports:
                - port: 7422
                  protocol: TCP
natsService:
    # this service is enabled via nats.enabled
    type: LoadBalancer
    leafnodes:
        port: 7422
natsConfig:
    users:
        lagoonRemote: []
        # Remote cluster  credentials and the account they have access to are
        # specified here.
        #
        # - user: ...
        #   password: ...
    tls: {}
    # If the lagoon-core-nats-tls secret should be created by the lagoon-core
    # chart, certificate values can be specified directly in secretData.
    # Configuring TLS this way also allows specifying a custom ca.crt.
    #
    # secretData:
    #   ca.crt: |
    #     ...
    #   server.crt: |
    #     ...
    #   server.key: |
    #     ...
    #
    # If the TLS secret is created outside the lagoon-core chart, it should be
    # named lagoon-core-nats-tls. This secret should contain fields tls.crt and
    # tls.key, and the certificate should be issued by a public authority.
sshPortalAPI:
    enabled: false
    replicaCount: 2
    image:
        repository: ghcr.io/uselagoon/lagoon-ssh-portal/ssh-portal-api
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.30.1
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 8Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    serviceAccount:
        # Annotations to add to the service account
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: ""
    serviceMonitor:
        enabled: true
    service:
        type: ClusterIP
        ports:
            metrics: 9911
opensearchSync:
    enabled: false
    image:
        repository: ghcr.io/uselagoon/lagoon-opensearch-sync
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.7.1
    # debug logging toggle
    debug: false
    # root certificate for the server certificate presented by opensearch
    opensearchCACertificate: ""
    # -----BEGIN CERTIFICATE-----
    # ...
    # -----END CERTIFICATE-----
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 8Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
sshToken:
    enabled: false
    replicaCount: 2
    image:
        repository: ghcr.io/uselagoon/lagoon-ssh-portal/ssh-token
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.30.1
    podAnnotations: {}
    securityContext: {}
    resources:
        requests:
            memory: 8Mi
            cpu: 10m
    additionalEnvs: null
    #   FOO: Bar
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    serviceMonitor:
        enabled: true
    service:
        type: LoadBalancer
        ports:
            sshserver: 22
    metricsService:
        type: ClusterIP
        ports:
            metrics: 9948
    # host keys, PEM encoded
    hostKeys:
        ecdsa: ""
        ed25519: ""
        rsa: ""
sops:
    azure_kv:
        - vault_url: https://kv-dplplat01-c3b2.vault.azure.net
          name: sops-key
          version: d82fe2456d6e4c4aaaaf808226bd5769
          created_at: "2025-10-13T20:03:42Z"
          enc: iUNR5UMZ-RiJPDdx87KEelhCcJe0kFezJhHIq8YvSAoS-ixwitAGKT02nA_A5C1ql3kc0BwwX1OMKaAgUv71PZAfqEVmoZtm--x8wAfGlq-7iwEj8PkvR4EmphA8m32CjsJ-o9y2H-an66q0sGQG5hiVd10qOUp3DIkvCztT6fpOWjPqboxfmDUCaf9MLuajsXmY6MyZKJYyOa3-k4opkT3w9w_AehzqwREKNJ6vueYBIsVKVztYGiV3a-jTWcqZQ7ITQeLmGygLJYOg-GhHl0LP7TypWckgD6Q2JtNIdfhlb6tk2gUMoq1wwXBm1yUwX8XKSYIwzGTKl_sKs9O5bi9t4-NwMQzRuuoOJkXkABS4A1sTlFUW0qsud5HwFQ2HOMve7WmKiEofJU0yxdu_6vGy5nd_-ppcBErmszUQxSfp9FqwyUmZFXqPkj8_L27AERk7PzozyBgHHDrWpMo7emTVl2URb4YKO8fpJI1Qk_dNKqKNjIAV3dcEQKz2y-wACLNYo1ErQEyqVmYAgxB4ium1GAIgU7tAl1jDjBG0nEHj7IqZHWmEy8CIRnzEnmVyxamLaHVRg1eFdGzi5wrvi9_Bo7zwu8IJ5qWFnuk2VmuLP9Cka_uUPu8Iv_KRhraeKE4BGTbV_6Mvws-dW5AUAs5uFz806a_nR5swOAMmH5M
    age:
        - recipient: age1q8yqc5jvhkk7ufj95tw25u3es0846pkrwgcd4pn9ctermr7e6cesn6l0gd
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBiQVRrMnJVRUthK2pscE9n
            MTNtdWFwT1JuZ1pvcjVaYVF4alpIS215aXdvCkE0NW9oWFVxc1gwTGpVdHNmSGpV
            VHFycWt5alFXeU5ia3RldlZTVDV3RW8KLS0tIGdiaEFueXZ6RjF1VEpLTmVMbkhW
            eTA3ZXNJemV6RDI1aEQ5aTZhMGxsRzAK5gyG6BdJYtQIUoG2kDDwpR88Z2AX5EFx
            iPnwB4FzR2D4oK+oRrFL6Ur026ydwMXSE8m0rDnUiitCcsPbyAjGZQ==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-10-13T20:03:50Z"
    mac: ENC[AES256_GCM,data:yLnelcNoo4PQXe+P7gs2cYdspVfmLkE7u9CJfhOdhyEgFb7WKDdc4xt6gaxAvzpeyHY0dESgygiy0ch9NyKstOGEfiZ+LfRXSVg/m3Z77uZLlQ7kLp24mf2aEviVLd0lK9v0je81Vnvj4h/hH1oqBeN8evrtK/nd/hsnj8AO4UA=,iv:bD2PTvEyyVAFv2s6xk1D4vCBxpJ861E37K2ATYVMrmA=,tag:+rY0gPInyNAqF7Urgg+D8w==,type:str]
    encrypted_comment_regex: ENCRYPT
    version: 3.11.0
