# Default values for lagoon-remote.
# global values which can affect subcharts
global:
    # set to true to enable openshift support
    openshift: false
    rabbitMQUsername: ""
    rabbitMQPassword: ""
    rabbitMQHostname: ""
imagePullSecrets: []
logsDispatcherHost: lagoon-logging-logs-dispatcher.lagoon-logging.svc.cluster.local
# If this value is set, it will create an `mxout` ExternalName service in the
# deployed namespace pointing at the given host. This service can then be used
# by workloads running in-cluster to connect to a platform-provided mailserver.
mxoutHost: ""
# this default image tag is set for all services and can be overridden
# on the service level, if not set it uses chart appVersion
imageTag: ""
dockerHost:
    image:
        repository: uselagoon/docker-host
        pullPolicy: Always
        # Overrides the image tag whose default is "latest".
        tag: v3.3.0
    name: docker-host
    registry: registry.lagoon.svc:5000
    repositoryToUpdate: amazeeio|lagoon
    pruneImagesUntil: 168h
    replicaCount: 1
    ## proxy configuration
    # httpProxy: ""
    # httpsProxy: ""
    # noProxy: ""
    # add extra environment variables if required
    extraEnvs: null
    storage:
        create: true
        size: 750Gi
        # className sets the storageClassName for the docker-host PVC. This is
        # useful if the docker-host requires a specific storage class for features
        # such as increased IOPS.
        #
        # WARNING: On platforms such as AKS not all storage volume classes can be
        # bound to all node types. So if you configure a storage class that can't
        # be bound to any nodes in the cluster it will cause the docker-host pod to
        # fail to schedule. For example AKS requires Premium Storage suport on the
        # node for the managed-premium storage class.
        #
        # If className is not defined the chart will not set any specify storage
        # class on the PVC, effectively falling back to the cluster default.
        #
        # className: managed-premium
    networkPolicy:
        # Specifies whether the docker-host network policy should be enabled
        enabled: true
    serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: null
    podSecurityContext: {}
    securityContext:
        privileged: true
        seLinuxOptions:
            # Ensures selinux relabeling is disabled, this would case the container never to start
            # as there can be so many files in the persistent storage
            type: spc_t
    resources: {}
    service:
        type: ClusterIP
        port: 2375
    tolerations:
        - key: noderole.dplplatform
          operator: Equal
          value: build
          effect: NoSchedule
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - build
# sshCore creates a restricted, non-expiring ServiceAccount token for use by
# lagoon-core.
sshCore:
    enabled: true
    serviceAccount:
        annotations: {}
        # The name of the service account to use.
        # If not set, a name is generated using the fullname
        # template
        name: ""
# sshPortal is an optional service providing low-latency SSH connectivity to
# Lagoon environments.
sshPortal:
    enabled: false
    replicaCount: 2
    image:
        repository: ghcr.io/uselagoon/lagoon-ssh-portal/ssh-portal
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.34.0
    service:
        type: LoadBalancer
        ports:
            sshserver: 22
        annotations: {}
    metricsService:
        type: ClusterIP
        ports:
            metrics: 9912
    podAnnotations: {}
    securityContext: {}
    resources: {}
    additionalEnvs: {}
    serviceAccount:
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: ""
    serviceMonitor:
        enabled: true
    # host keys, PEM encoded
    hostKeys:
        ecdsa: ""
        ed25519: ""
        rsa: ""
        # Log access via SSH is disabled by default.
        # Uncomment this line to enable log access via SSH.
        # logAccessEnabled: true
# This subchart is disabled by default until this build-deploy type is in
# widespread use.
lagoon-build-deploy:
    enabled: true
    # these values are used by the lagoon-build-deploy controller and do not have
    # sensible defaults.
    # lagoonTargetName:
    #ENCRYPT
    taskSSHHost: ENC[AES256_GCM,data:DsojDUJN+xvWHRevA/s=,iv:9BY3XqErRyflOUkRJiYHgfewO+JnBZQgD8A0Hnz3sC0=,tag:XtIr5/oBnYC0ItS4XG19vg==,type:str]
    taskSSHPort: 22
    taskAPIHost: api.lagoon.dplplat01.dpl.reload.dk
    # lagoonTokenHost: ""
    # lagoonTokenPort: ""
    # lagoonAPIHost: ""
    # sshPortalHost: ""
    # sshPortalPort: ""
    rabbitMQUsername: lagoon
    #ENCRYPT
    rabbitMQPassword: ENC[AES256_GCM,data:66gdLEblRLDC8l0h/OeoE6L2sRF2bnVIf/yfzMUjTPo=,iv:Gx7WRsdvl18iQU8qtLFau1g+obecYiERW0UXcISC1qY=,tag:QBlxSen5QtzVS34MMn8Mgg==,type:str]
    rabbitMQHostname: lagoon-core-broker.lagoon-core.svc.cluster.local
    lagoonTargetName: lagoon
    lagoonFeatureFlagDefaultRootlessWorkload: enabled
    # See the parent chart for the full range of values that can be passed here to control builds
    # https://github.com/uselagoon/lagoon-charts/blob/main/charts/lagoon-build-deploy/values.yaml
    extraArgs:
        - --enable-harbor=true
        - --harbor-url=https://harbor.lagoon.dplplat01.dpl.reload.dk
        - --harbor-api=https://harbor.lagoon.dplplat01.dpl.reload.dk/api/
        - --harbor-username=admin
        #ENCRYPT
        - ENC[AES256_GCM,data:L/wfGc60wR4+SXroJGvr6MZ5BPaZ64ugFpJdtDQ4mtE1sQ==,iv:LKZ29D4k7jafHrXGQy8wlvkjGiKb666Qsn3y1dqKMuk=,tag:UChLlgJ56u3ZmfOraMjtAw==,type:str]
        - --enable-qos
        - --qos-max-builds=8
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
# dbaas-operator provisions database-as-a-service accounts for projects.
# Example provider configuration can be found in the dbaas-operator values.yaml
# https://github.com/amazeeio/charts/blob/main/charts/dbaas-operator/values.yaml
# This subchart is disabled by default for legacy reasons. It will be enabled
# by default in future as this is a core Lagoon feature.
dbaas-operator:
    enabled: true
    enableMariaDBProviders: true
    enableMongoDBProviders: true
    enablePostreSQLProviders: true
    mariadbProviders:
        production:
            environment: production
            hostname: mariadb-10-6-22-production-1.mariadb-10-6-22-production-1.svc.cluster.local
            readReplicaHostnames:
                - mariadb-10-6-22-production-1.mariadb-10-6-22-production-1.svc.cluster.local
            #ENCRYPT
            password: ENC[AES256_GCM,data:KWxC0dKGVqOIk+Ao+AA0ofyFw54jJLfW,iv:CN2JRHLt90muT/UPIjHA5P8mHMTixpQbGepilF9Lnrg=,tag:hZ8RpNFzl2gM2Cy6nd69oQ==,type:str]
            port: 3306
            #ENCRYPT
            user: ENC[AES256_GCM,data:hGiNTQ==,iv:jIjody+VyUhATaKT7QHIwQYSQZbdT5uj/dFvkITPrhg=,tag:ShfI5wtpZdJhcXAtfGAn3w==,type:str]
        development:
            environment: development
            hostname: mariadb-10-06-01-test.mariadb-10-06-01-test.svc.cluster.local
            readReplicaHostnames:
                - mariadb-10-06-01-test.mariadb-10-06-01-test.svc.cluster.local
            #ENCRYPT
            password: ENC[AES256_GCM,data:AY7Pto+OEDeg3pgN1jdcMOpq5CtxLqjZ,iv:zvlfuwBcCzQr/eS9nFzSgd4wSug3L9ZsgDyvNtL2oSs=,tag:Ok94p9S1BkKh8oeRDF7AzA==,type:str]
            port: 3306
            #ENCRYPT
            user: ENC[AES256_GCM,data:xja8Sw==,iv:xhBCqoJNAmuzaQ7CKjBVdrEwoOy+fBRLDj86tfxHzVA=,tag:yL7bWicfq66VVabpvfHGaA==,type:str]
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
# if you are using the dbaas-operator in a different release, you can define the http endpoint to use here
# setting this will always override whatever `dbaas-operator` would set, useful if you want to target a different endpoint
dbaasHTTPEndpoint: ""
# lagoon-insights-remote:
#   enabled: false
# burnAfterReading: false
insightsRemote:
    enabled: false
    # sets insights configMaps to be removed after being processed
    burnAfterReading: true
    replicaCount: 1
    # This is the secret used to sign JWT's injected into environments
    # This shouldn't need to be changed in most circumstances - here for completion
    # insightsTokenSecret: ""
    image:
        repository: uselagoon/insights-remote
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.0.8
    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""
    serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""
    podAnnotations: {}
    podSecurityContext: {}
    # fsGroup: 2000
    securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # service:
    #   type: ClusterIP
    #   port: 80
    # ingress:
    #   enabled: false
    #   className: ""
    #   annotations: {}
    #     # kubernetes.io/ingress.class: nginx
    #     # kubernetes.io/tls-acme: "true"
    #   hosts:
    #     - host: chart-example.local
    #       paths:
    #         - path: /
    #           pathType: ImplementationSpecific
    #   tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    nodeSelector: {}
    tolerations: []
    affinity: {}
    service:
        type: ClusterIP
        port: 80
# the nats chart is a subchart which is configured for use by lagoon-remote
nats:
    enabled: false
    # inject additional config
    additionalVolumes:
        - name: lagoon-remote-nats-tls
          secret:
            secretName: lagoon-remote-nats-tls
    additionalVolumeMounts:
        - name: lagoon-remote-nats-tls
          mountPath: /etc/lagoon-remote-nats-tls
    nats:
        config:
            - name: lagoon-remote
              secret:
                secretName: lagoon-remote-nats-conf
    cluster:
        enabled: true
        name: lagoon-remote
        # internal cluster IPs are not routable, so don't advertise them
        noAdvertise: true
    natsbox:
        enabled: false
    # to connect to nats, pods must have the right label
    networkPolicy:
        enabled: true
        allowExternal: false
        # allow outbound leaf connection
        extraEgress:
            - ports:
                - port: 7422
                  protocol: TCP
# Configuration for the nats subchart
natsConfig:
    # coreURL format nats://<username>:<password>@<host>:7422
    coreURL: ""
    tls: {}
    # If the lagoon-remote-nats-tls secret should be created by the
    # lagoon-remote chart, certificate values can be specified directly in
    # secretData. Configuring TLS this way also allows specifying a custom
    # ca.crt.
    #
    # secretData:
    #   ca.crt: |
    #     ...
    #   client.crt: |
    #     ...
    #   client.key: |
    #     ...
    #
    # If the TLS secret is created outside the lagoon-remote chart, it should
    # be named lagoon-remote-nats-tls. This secret should contain fields
    # tls.crt and tls.key, and the certificate should be issued by a public
    # authority.
storageCalculator:
    enabled: false
    # cronjob: 5 */12 * * *
    # ignoreRegex: "solr|redis"
    serviceAccount:
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: null
    image:
        repository: uselagoon/remote-calculator
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.2.3
sops:
    azure_kv:
        - vault_url: https://kv-dplplat01-c3b2.vault.azure.net
          name: sops-key
          version: d82fe2456d6e4c4aaaaf808226bd5769
          created_at: "2025-10-15T10:30:55Z"
          enc: j_fYu7NYkD3c-hSVCRamUqdV3vQMaxgYODF-WAWW9IH_jfBkYYKpeSyCj7-mCbYxh-fN20VAuqMBjUc2Ap24Gbu7DJCo4aIY8yJZDHb9wBerZfnmwBPoPhn0e51-8K6nSVrWCKWX8vf26kBlj1FUWp1hGnj0EWB8FRNf4qTVjJodgUsopz94Tq2e7xv-QRks870KN461vEsyLQ6I0R5sFGbZD-Ignn982btp3ousmCQ7Xm6bGgchTMvPkgW65JIANR_E3p-i2P1yVyJeISiXoezdNh-SsWIKkP5qBuBAuEc9IU9hD7mBolq_cfHjPEh9Uxqv-nGrU9gEJr_KINwCI_bBqnUv1LHs8Vs3bcocor0zl7mBf7rFCpQLH3TfrDHD0IAYwBiktfURIGTTlI08kE8YXbUaJTL4fYCBSmmrLoJpXo1BZxXx5Ki0m9d-937T96Ly2heyI0sQGHyP2XaQXgoOr6d9ErHuvQ4_rCZfI1cZukg9cUVj_CzPJF7yGnrAeilx6ENs3KAU8bT8DZRBptIM--znyDRbp75is1g9PfPxVwvMEJh2z1cwbgl8tN6Ppbu2AanyZj5kbXX7WhJ8ReeB1CDbSDuBCzEJAdkKSPh3xvFoERjKLsn7S4gJDHPIFlUMcVrKd58MeRVEhyb3UjZJLRqzh_D3ZjTid31gxUw
    age:
        - recipient: age1q8yqc5jvhkk7ufj95tw25u3es0846pkrwgcd4pn9ctermr7e6cesn6l0gd
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBkKzlCcG5Pc3ExTE9LMDdY
            UHFpdUgreTNzSjdhTk16N1pybWVUVmdLandFClRWU2xLa25iREIwT1oydHk5VGRw
            ak9lTnR4T0dPQ25qbDJQVFVuK2Fka2MKLS0tIGtGbWFsdGpDN0VCSTRwVzFEM1h5
            cUNPenMrVkYvZmZTQTZVTkt6bWFnWWMKftGdO+Nfkq7NbhQf4AJYfJoKbtPIZqDs
            xvqNxg8AJ4uZvF7CZaHtsx+4QETR2jDNZkRB6j9gLGW+Yn1Sd/sn9A==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-10-15T10:30:57Z"
    mac: ENC[AES256_GCM,data:szxvuId8aDFnsXl4OQ4dYi9M/iyFzF01kBwIT+6I+UiR68/NU0kvzYxqkGmNDwcQT8jXuP9qn2aQ0Dcx7FYA5y8K/G8sqmgR1n1BmMnTiNilgFwQmdAkhlZ6NFyEnqdGHKpAWmbiuUIHxXNUCkJhSAcdUWUsE5LprqagvvaOwPg=,iv:8B+QMgvoPhyy+VGyD5CLQoArkl5H0M6IWWW9Ud0hqEk=,tag:Df28G2M4K2cssxHxtpjSgg==,type:str]
    encrypted_comment_regex: ENCRYPT
    version: 3.11.0
