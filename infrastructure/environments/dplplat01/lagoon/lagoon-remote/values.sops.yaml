# Default values for lagoon-remote.
# global values which can affect subcharts
global:
    # set to true to enable openshift support
    openshift: false
    rabbitMQUsername: ""
    rabbitMQPassword: ""
    rabbitMQHostname: ""
imagePullSecrets: []
logsDispatcherHost: lagoon-logging-logs-dispatcher.lagoon-logging.svc.cluster.local
# If this value is set, it will create an `mxout` ExternalName service in the
# deployed namespace pointing at the given host. This service can then be used
# by workloads running in-cluster to connect to a platform-provided mailserver.
mxoutHost: ""
# this default image tag is set for all services and can be overridden
# on the service level, if not set it uses chart appVersion
imageTag: ""
dockerHost:
    image:
        repository: uselagoon/docker-host
        pullPolicy: Always
        # Overrides the image tag whose default is "latest".
        tag: v3.3.0
    name: docker-host
    registry: registry.lagoon.svc:5000
    repositoryToUpdate: amazeeio|lagoon
    pruneImagesUntil: 168h
    replicaCount: 1
    ## proxy configuration
    # httpProxy: ""
    # httpsProxy: ""
    # noProxy: ""
    # add extra environment variables if required
    extraEnvs: null
    storage:
        create: true
        size: 750Gi
        # className sets the storageClassName for the docker-host PVC. This is
        # useful if the docker-host requires a specific storage class for features
        # such as increased IOPS.
        #
        # WARNING: On platforms such as AKS not all storage volume classes can be
        # bound to all node types. So if you configure a storage class that can't
        # be bound to any nodes in the cluster it will cause the docker-host pod to
        # fail to schedule. For example AKS requires Premium Storage suport on the
        # node for the managed-premium storage class.
        #
        # If className is not defined the chart will not set any specify storage
        # class on the PVC, effectively falling back to the cluster default.
        #
        # className: managed-premium
    networkPolicy:
        # Specifies whether the docker-host network policy should be enabled
        enabled: true
    serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: null
    podSecurityContext: {}
    securityContext:
        privileged: true
        seLinuxOptions:
            # Ensures selinux relabeling is disabled, this would case the container never to start
            # as there can be so many files in the persistent storage
            type: spc_t
    resources: {}
    service:
        type: ClusterIP
        port: 2375
    tolerations:
        - key: noderole.dplplatform
          operator: Equal
          value: build
          effect: NoSchedule
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - build
# sshCore creates a restricted, non-expiring ServiceAccount token for use by
# lagoon-core.
sshCore:
    enabled: true
    serviceAccount:
        annotations: {}
        # The name of the service account to use.
        # If not set, a name is generated using the fullname
        # template
        name: ""
# sshPortal is an optional service providing low-latency SSH connectivity to
# Lagoon environments.
sshPortal:
    enabled: false
    replicaCount: 2
    image:
        repository: ghcr.io/uselagoon/lagoon-ssh-portal/ssh-portal
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.30.1
    service:
        type: LoadBalancer
        ports:
            sshserver: 22
        annotations: {}
    metricsService:
        type: ClusterIP
        ports:
            metrics: 9912
    podAnnotations: {}
    securityContext: {}
    resources: {}
    additionalEnvs: {}
    serviceAccount:
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: ""
    serviceMonitor:
        enabled: true
    # host keys, PEM encoded
    hostKeys:
        ecdsa: ""
        ed25519: ""
        rsa: ""
# This subchart is disabled by default until this build-deploy type is in
# widespread use.
lagoon-build-deploy:
    enabled: true
    # these values are used by the lagoon-build-deploy controller and do not have
    # sensible defaults.
    # lagoonTargetName:
    #ENCRYPT
    taskSSHHost: ENC[AES256_GCM,data:tQ79FpDS6+3Hg1g1WX4=,iv:6syXMKbBq/ghJSNM+yfrH6E/g6E7z3RhzpCX5m1gHiM=,tag:dDbQ/P5xq8cMwmHq023Q8Q==,type:str]
    taskSSHPort: 22
    taskAPIHost: api.lagoon.dplplat01.dpl.reload.dk
    # lagoonTokenHost: ""
    # lagoonTokenPort: ""
    # lagoonAPIHost: ""
    # sshPortalHost: ""
    # sshPortalPort: ""
    rabbitMQUsername: lagoon
    #ENCRYPT
    rabbitMQPassword: ENC[AES256_GCM,data:6WRmLiWGtUYYSDNX7VzP/Y8TGTSRr2UtujH9Zywn9n8=,iv:L+/Qe1lj6gWrSSd1i8Akdp3tjyQiQYyN0ikGQgbSEQw=,tag:3yBZaM36JBLh3foKrG9o/w==,type:str]
    rabbitMQHostname: lagoon-core-broker.lagoon-core.svc.cluster.local
    lagoonTargetName: lagoon
    lagoonFeatureFlagDefaultRootlessWorkload: enabled
    # See the parent chart for the full range of values that can be passed here to control builds
    # https://github.com/uselagoon/lagoon-charts/blob/main/charts/lagoon-build-deploy/values.yaml
    extraArgs:
        - --enable-harbor=true
        # TODO template
        - --harbor-url=https://harbor.lagoon.dplplat01.dpl.reload.dk
        - --harbor-api=https://harbor.lagoon.dplplat01.dpl.reload.dk/api/
        - --harbor-username=admin
        #ENCRYPT
        - ENC[AES256_GCM,data:HJgwtZGq1SyCV8bJs6QhCeM+/hIlLevUsoUuWfAHN+MHAg==,iv:z781oXt280rMOQhayancjmTz7FCBgHk2uvhSTvEA+1A=,tag:JOyvfEt5nJwq7Dq4Kqfx5g==,type:str]
        - --enable-qos
        - --qos-max-builds=8
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
# dioscuri is the operator which implements Lagoon active-standby.
# This subchart is enabled by default as this is a core Lagoon feature.
dioscuri:
    enabled: true
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
# dbaas-operator provisions database-as-a-service accounts for projects.
# Example provider configuration can be found in the dbaas-operator values.yaml
# https://github.com/amazeeio/charts/blob/main/charts/dbaas-operator/values.yaml
# This subchart is disabled by default for legacy reasons. It will be enabled
# by default in future as this is a core Lagoon feature.
dbaas-operator:
    enabled: true
    enableMariaDBProviders: true
    enableMongoDBProviders: true
    enablePostreSQLProviders: true
    mariadbProviders:
        production:
            environment: production
            hostname: mariadb-10-6-22-production-1.mariadb-10-6-22-production-1.svc.cluster.local
            readReplicaHostnames:
                - mariadb-10-6-22-production-1.mariadb-10-6-22-production-1.svc.cluster.local
            #ENCRYPT
            password: ENC[AES256_GCM,data:XZIqjbquPLMx3feE70pD12v/57bcqm48,iv:HRnkpd7xKEOWpBaF532HRdRMSpCLwZSIHvT4MdVCm+k=,tag:ZAJgzRbfXB88C9Lk8dD5/Q==,type:str]
            port: 3306
            #ENCRYPT
            user: ENC[AES256_GCM,data:7xClow==,iv:5mE9d44khLlXPG7DZW1UoIyc3h41ZtkWwB0OIO2Poeo=,tag:SAOGR8z+Yz6cWX0B6NBw/Q==,type:str]
        development:
            environment: development
            hostname: mariadb-10-06-01-test.mariadb-10-06-01-test.svc.cluster.local
            readReplicaHostnames:
                - mariadb-10-06-01-test.mariadb-10-06-01-test.svc.cluster.local
            #ENCRYPT
            password: ENC[AES256_GCM,data:gJy+z+d7FJjgg3cuXakPJiHSLzPcPTtt,iv:KeaXaNUJyykkuOLvhXdEEqGIHtg7jIQdqs74HfiuicY=,tag:v3dO0gVLatJmGC0zyU22OQ==,type:str]
            port: 3306
            #ENCRYPT
            user: ENC[AES256_GCM,data:f0ErWg==,iv:7I/zVF3cYRNlTda0QvjQBqeTBhO9qu+FRQEPgchcR9A=,tag:6wLLWyvDuZgUTtjZkP5xqw==,type:str]
    tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
    affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                    - matchExpressions:
                        - key: noderole.dplplatform
                          operator: In
                          values:
                            - system
# if you are using the dbaas-operator in a different release, you can define the http endpoint to use here
# setting this will always override whatever `dbaas-operator` would set, useful if you want to target a different endpoint
dbaasHTTPEndpoint: ""
# lagoon-insights-remote:
#   enabled: false
# burnAfterReading: false
insightsRemote:
    enabled: false
    # sets insights configMaps to be removed after being processed
    burnAfterReading: true
    replicaCount: 1
    # This is the secret used to sign JWT's injected into environments
    # This shouldn't need to be changed in most circumstances - here for completion
    # insightsTokenSecret: ""
    image:
        repository: uselagoon/insights-remote
        pullPolicy: Always
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.0.8
    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""
    serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""
    podAnnotations: {}
    podSecurityContext: {}
    # fsGroup: 2000
    securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    # service:
    #   type: ClusterIP
    #   port: 80
    # ingress:
    #   enabled: false
    #   className: ""
    #   annotations: {}
    #     # kubernetes.io/ingress.class: nginx
    #     # kubernetes.io/tls-acme: "true"
    #   hosts:
    #     - host: chart-example.local
    #       paths:
    #         - path: /
    #           pathType: ImplementationSpecific
    #   tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    nodeSelector: {}
    tolerations: []
    affinity: {}
    service:
        type: ClusterIP
        port: 80
# the nats chart is a subchart which is configured for use by lagoon-remote
nats:
    enabled: false
    # inject additional config
    additionalVolumes:
        - name: lagoon-remote-nats-tls
          secret:
            secretName: lagoon-remote-nats-tls
    additionalVolumeMounts:
        - name: lagoon-remote-nats-tls
          mountPath: /etc/lagoon-remote-nats-tls
    nats:
        config:
            - name: lagoon-remote
              secret:
                secretName: lagoon-remote-nats-conf
    cluster:
        enabled: true
        name: lagoon-remote
        # internal cluster IPs are not routable, so don't advertise them
        noAdvertise: true
    natsbox:
        enabled: false
    # to connect to nats, pods must have the right label
    networkPolicy:
        enabled: true
        allowExternal: false
        # allow outbound leaf connection
        extraEgress:
            - ports:
                - port: 7422
                  protocol: TCP
# Configuration for the nats subchart
natsConfig:
    # coreURL format nats://<username>:<password>@<host>:7422
    coreURL: ""
    tls: {}
    # If the lagoon-remote-nats-tls secret should be created by the
    # lagoon-remote chart, certificate values can be specified directly in
    # secretData. Configuring TLS this way also allows specifying a custom
    # ca.crt.
    #
    # secretData:
    #   ca.crt: |
    #     ...
    #   client.crt: |
    #     ...
    #   client.key: |
    #     ...
    #
    # If the TLS secret is created outside the lagoon-remote chart, it should
    # be named lagoon-remote-nats-tls. This secret should contain fields
    # tls.crt and tls.key, and the certificate should be issued by a public
    # authority.
storageCalculator:
    enabled: false
    # cronjob: 5 */12 * * *
    # ignoreRegex: "solr|redis"
    serviceAccount:
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname
        # template
        name: null
    image:
        repository: uselagoon/remote-calculator
        pullPolicy: IfNotPresent
        # Overrides the image tag whose default is the chart appVersion.
        tag: v0.2.3
sops:
    azure_kv:
        - vault_url: https://kv-dplplat01-c3b2.vault.azure.net
          name: sops-key
          version: d82fe2456d6e4c4aaaaf808226bd5769
          created_at: "2025-10-14T11:09:10Z"
          enc: LJkVdvUIGfP-uz22G_pNZy7C4pQH0NepaT9etqH8HItA9FBZ7nBaLNdCwK00RCknTEjhyk8x7TP_FG9GsjoMEvdMoEg9E9Oy9OPr1sVVyYzgL4smhwBkOOoJDXxbVY1kwJnBLhH3eygJGBkA-wHyM0rRyBteTuR5uUCy5u-GpxgAKh_f_8hFWsyyrmXxHJawB7jasKgp1gVBhk85TviS-hsH4OZUnmtAAsWEYh3VUd_D1Au-pckAo-3MJH-Vq3maSUuEm_SatoB_IWj8ISQydH8_C11aO0-oBYHulR3ZrhQ__a_2S7hH2oV8BdxC-ZLb3lH__THTbGIi1Az3OqiSuqN0hbhkete2oOkX1X8LGGlVl0cQVBkwwGzB-LgO7qjBrPJo_d3O4Wl_7VJU2qLXTtrUgbWw04cFFYAaVupk7i2xFp3k28UHzoxOVyzuFEpWGd6YbQ01HA366jUInqdEsRtxDT8KXC0BwvZWVJ5MyUz61lF_SpkLp900wfgcH8Rj3TxnfjL-QD0E0FRwNdV3ejmO4IwwuC3uwgNbgV5sBf7-bOFAvAXmSVl2xJ4aJI39YYANcCzYrLJvXhk2OmkCTCVIuO-ZGMCAEgdc_yPzp_DjLdEuJn-Y1CmYQEB-p3injSdR3X3_bek7tkh0tlGdHse4_yLMZdhHQBZjDuQ2Aok
    age:
        - recipient: age1q8yqc5jvhkk7ufj95tw25u3es0846pkrwgcd4pn9ctermr7e6cesn6l0gd
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBhempIamNnVHpIMFZ4ekxk
            a2lZb3g1MGJXQnBycy9PYmRxbGE4TXhjR2lBCmRhWldRS3RyZG9IUk5vSjJYbUs5
            cmdadnlzR1dPbC9EM0JkMC9aZktFVFEKLS0tIEZtaXFUa3A2R0ZNblplMDVwdHEv
            YVlPd3pQeFMxdHJhRVQrL0dsRU1vY3cKyZNOXG6TB3IQKh6Y40A+M/V8i6QhJY3m
            ZKHcWXrJddH5HaJTOjf0oJug+jkCZu6vRYhaTz1V0nTO3MMVEfdbOg==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-10-14T11:09:44Z"
    mac: ENC[AES256_GCM,data:/eEuHCCUehuZ4HRhBYt1TnRO3m1kNmj5fl7u1yF7EJwVKd9d7zgPzs0mEizYInpCFazPDVAyx00lXx0jxLyyYuriI6d0xa1F/TIE30ZctWbRkoeglZ9XSSctbKNBkhInVs5kBArmCG7+cAMpubxXQCQhdpik8algiJtYHMqO3vY=,iv:ay1AM/qvJT11YdIRs9RuKTCp5rOOvo4yoA7/+/JW7lE=,tag:7p2KfkuXRBY6QR4h/qy0oA==,type:str]
    encrypted_comment_regex: ENCRYPT
    version: 3.11.0
