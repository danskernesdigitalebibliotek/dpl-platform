apiVersion: v1
kind: Namespace
metadata:
  name: mariadb-servers

---

apiVersion: v1
kind: Secret
metadata:
  name: test-mariadb
  namespace: mariadb-servers
  labels:
    k8s.mariadb.com/watch: ""
stringData:
  password: MariaDB11!
  root-password: MariaDB11!

---

apiVersion: k8s.mariadb.com/v1alpha1
kind: MariaDB
metadata:
  name: test-mariadb
  namespace: mariadb-servers
spec:
  image: docker-registry1.mariadb.com/library/mariadb:10.6
  rootPasswordSecretKeyRef:
    name: test-mariadb
    key: root-password
  replicas: 3
  galera:
    enabled: true
    config:
      reuseStorageVolume: true
    agent:
      basicAuth:
        enabled: true
    replicaThreads: 1
    providerOptions:
      gcs.fc_limit: '64'
    recovery:
      enabled: true
      minClusterSize: 1
      clusterMonitorInterval: 10s
      clusterHealthyTimeout: 30s
      clusterBootstrapTimeout: 10m
      podRecoveryTimeout: 5m
      podSyncTimeout: 5m

  storage:
    size: 10Gi
    storageClassName: default
    resizeInUseVolumes: true
    waitForVolumeResize: true
  # volumes:
  #   - name: mariabackup
  #     persistentVolumeClaim:
  #       claimName: mariabackup
  # volumeMounts:
  #   - name: mariabackup
  #     mountPath: /var/mariadb/backup/

  myCnf: |
    [mariadb]
    bind-address=*
    default_storage_engine=InnoDB
    binlog_format=row
    innodb_autoinc_lock_mode=2
    max_allowed_packet=256M

    # [mariadb]
    # bind-address=*
    # default_storage_engine=InnoDB
    # binlog_format=row
    # max_allowed_packet=128M
    # collation_server=LATIN1_SWEDISH_CI
    # character_set_server=LATIN1
    # join_buffer_size=262144
    # interactive_timeout=1000
    # max_connect_errors=10
    # thread_pool_stall_limit=500
    # thread_pool_max_threads=1800
    # key_buffer_size = 16M
    # max_connections = 400
    # max_heap_table_size = 512M
    # myisam_recover_options = BACKUP
    # optimizer_search_depth = 0
    # skip_external_locking = 1
    # table_open_cache = 65498
    # thread_cache_size = 8
    # thread_stack = 256K
    # tmp_table_size = 512M
    # tmpdir = /tmp
    # autocommit=0
    # ignore_db_dirs=backup
    # optimizer_search_depth = 0
    # query_cache_size = 0
    # query_cache_type = 0
    # skip_external_locking = 1
    # skip_name_resolve = 1
    # socket = /run/mysqld/mysqld.sock
    # transaction_isolation="READ-COMMITTED"
    # wait_timeout=28000

    # [innodb]
    # innodb_autoinc_lock_mode=1
    # innodb_buffer_pool_size=1024M
    # innodb_buffer_pool_size=1G
    # innodb_force_recovery=0
    # innodb_flush_log_at_trx_commit = 0
    # innodb_log_buffer_size = 32M
    # innodb_max_purge_lag=10000
    # innodb_deadlock_detect=1
    # innodb_lock_wait_timeout=50
    # innodb_sync_array_size=1
    # innodb_purge_batch_size=300
    # innodb_thread_sleep_delay=1000
    # innodb_table_locks=1
    # innodb_buffer_pool_instances=1
    # innodb_flush_log_at_trx_commit = 0

    # [galera]
    # wsrep_retry_autocommit=3


  myCnfConfigMapKeyRef:
    name: mariadb
    key: my.cnf

  timeZone: "UTC"

  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      memory: 2Gi

  env:
    - name: TZ
      value: SYSTEM

  podSecurityContext:
    runAsGroup: 999
    runAsNonRoot: true
    runAsUser: 999
    fsGroup: 999

  securityContext:
    allowPrivilegeEscalation: false

  livenessProbe:
    exec:
      command:
        - bash
        - -c
        - mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;"
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5

  readinessProbe:
    exec:
      command:
        - bash
        - -c
        - mariadb -u root -p"${MARIADB_ROOT_PASSWORD}" -e "SELECT 1;"
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5

  podDisruptionBudget:
    maxUnavailable: 50%

  # updatestrategy:
  #   type: ReplicasFirstPrimaryLast

  metrics:
    enabled: true

  suspend: false


  service:
    type: ClusterIP

  primaryService:
    type: ClusterIP

  secondaryService:
    type: ClusterIP
---

apiVersion: k8s.mariadb.com/v1alpha1
kind: Database
metadata:
  name: test-database
  namespace: canary-main
spec:
  # If you want the database to be created with a different name than the resource name
  # name: test
  mariaDbRef:
    name: test-mariadb
    namespace: mariadb-servers
  characterSet: LATIN1
  collate: LATIN1_SWEDISH_CI
  # Delete the resource in the database whenever the CR gets deleted.
  # Alternatively, you can specify Skip in order to omit deletion.
  cleanupPolicy: Delete
  requeueInterval: 30s
  retryInterval: 5s

---

apiVersion: k8s.mariadb.com/v1alpha1
kind: User
metadata:
  name: mariadb-user
  namespace: canary-main
spec:
  # If you want the user to be created with a different name than the resource name
  name: test
  mariaDbRef:
    name: test-mariadb
    namespace: mariadb-servers
  passwordSecretKeyRef:
    name: test-mariadb
    key: root-password
  # This field defaults to 10
  maxUserConnections: 20
  host: "%"
  # Delete the resource in the database whenever the CR gets deleted.
  # Alternatively, you can specify Skip in order to omit deletion.
  cleanupPolicy: Delete
  requeueInterval: 30s
  retryInterval: 5s

---

apiVersion: v1
kind: Secret
metadata:
  name: test-mariadb
  namespace: canary-main
  labels:
    k8s.mariadb.com/watch: ""
stringData:
  password: MariaDB11!
  root-password: MariaDB11!

---

apiVersion: k8s.mariadb.com/v1alpha1
kind: Grant
metadata:
  name: mariadb-grant
  namespace: canary-main
spec:
  mariaDbRef:
    name: test-mariadb
    namespace: mariadb-servers
  privileges:
    - "ALL PRIVILEGES"
  database: test-database
  table: "*"
  username: test
  grantOption: true
  host: "%"
  # Delete the resource in the database whenever the CR gets deleted.
  # Alternatively, you can specify Skip in order to omit deletion.
  cleanupPolicy: Delete
  requeueInterval: 30s
  retryInterval: 5s

---

apiVersion: v1
kind: Service
metadata:
  name: test-mariadb
  namespace: canary-main
  resourceVersion: "825028507"
spec:
  externalName: test-mariadb.mariadb-servers.svc.cluster.local
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  sessionAffinity: None
  type: ExternalName
status:
  loadBalancer: {}
