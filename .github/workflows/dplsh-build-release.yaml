on:
  pull_request:
    paths:
    - 'tools/dplsh/**'
    - '.github/workflows/dplsh-build-release.yaml'
  push:
    branches:
    - master
    # Limit pushes on master to only build if these files has changed.
    paths:
    - 'tools/dplsh/**'
    - '.github/workflows/dplsh-build-release.yaml'
    tags:
    - 'dplsh-*'

name: Build, test and publish DPL Shell image
jobs:
  dplsh_build:
    runs-on: ubuntu-latest
    # Set some environment vars about the image and container registry.
    env:
      # Registry to push the image to.
      repo: ghcr.io
      # Complete registry url for image. (omitting image name).
      image-url: ghcr.io/danskernesdigitalebibliotek/dpl-platform/dplsh
      # Name of the container image to build and push.
      image: dplsh
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Install Task
      uses: Arduino/actions/setup-taskfile@master
    # Generate a sane tag based on current git ref (branch, tag, etc).
    - uses: rlespinasse/github-slug-action@v3.x
    - name: Build ${{env.image}} container image
      env:
        IMAGE_URL: working-image
        IMAGE_TAG: 0.0.0
      run: task build
      working-directory: tools/dplsh
    - name: Test ${{env.image}} container image
      env:
        IMAGE_URL: working-image
        IMAGE_TAG: 0.0.0
      run: task test
      working-directory: tools/dplsh
    # Publish to container registry if this was a push event (not a PR).
    - name: Publish image to registry
      if: github.event_name == 'push'
      run: |
        IMAGE_VERSION=
        # If this is a push of a tag, do a docker tag and push
        if [[ "${{github.ref}}" == refs/tags/* ]]; then
          # If we build a tag, push that image to docker tag.
          IMAGE_VERSION=$(echo ${GITHUB_REF_SLUG} | sed -e 's/^${{env.image}}-//')

          # Push the service-image to the github registry.
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{env.repo}} -u username-is-ignored --password-stdin
          # Tag latest and release version
          docker tag working-image:0.0.0 ${{env.image-url}}:$IMAGE_VERSION
          docker tag working-image:0.0.0 ${{env.image-url}}:latest
          # And push to github registry
          docker push ${{env.image-url}}:$IMAGE_VERSION
          docker push ${{env.image-url}}:latest
        fi
    - name: Create release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
