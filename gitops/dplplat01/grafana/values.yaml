# https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml

# One instance of Grafana should be enough.
replicas: 1

ingress:
  # Make Grafana accessible to the outside world over https via an ingress.
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  path: /
  pathType: Prefix
  hosts:
    - grafana.lagoon.dplplat01.dpl.reload.dk
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.lagoon.dplplat01.dpl.reload.dk

# Use a persistent disk for config and dashboard storage.
persistence:
  type: pvc
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 10Gi

  finalizers:
    - kubernetes.io/pvc-protection

sidecar:
  datasources:
    # Enables the cluster wide search for datasources and add them
    # automatically to grafana.
    enabled: true

# Our disk cannot be shared between pods, so we need to do a full recreate
# instead of a rolling deployment.
deploymentStrategy:
  type: Recreate

## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        url: http://loki-gateway.loki.svc.cluster.local
        access: proxy
        isDefault: true
      - name: Prometheus
        type: prometheus
        url: http://prometheus-operated.prometheus.svc.cluster.local:9090
        access: proxy
        isDefault: false

## Grafana's primary configuration
# Sample plugin installation
# plugins:
#   - grafana-piechart-panel 1.6.2

## NOTE: values in map will be converted to ini format
## ref: http://docs.grafana.org/installation/configuration/
##
grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net

tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: noderole.dplplatform
              operator: In
              values:
                - system
