updateStrategy:
  type: Recreate
expose:
  ingress:
    annotations:
      kubernetes.io/tls-acme: true
    hosts:
     core: harbor.lagoon.dplplat01.dpl.reload.dk
  tls:
    enabled: true
    certSource: secret
    secret:
      secretName: harbor-harbor-ingress-v1-14-3
externalURL: https://harbor.lagoon.dplplat01.dpl.reload.dk
existingSecretAdminPassword: harbor-admin-password-secret
existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD
chartmuseum:
  enabled: false
clair:
  enabled: false
notary:
  enabled: false
trivy:
  enabled: false
jobservice:
  image:
    repository: goharbor/harbor-jobservice
    tag: {{ .Values.imageTag }}
  jobLogger: stdout
  # Use tolerations
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: noderole.dplplatform
                operator: In
                values:
                  - system
registry:
  registry:
    image:
      repository: goharbor/registry-photon
      tag: {{ .Value.imageTag }}
  controller:
    image:
      repository: goharbor/harbor-registryctl
      tag: {{ .Values.imageTag }}
  replicas: 3
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
  # Use tolerations
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: noderole.dplplatform
                operator: In
                values:
                  - system
core:
  image:
    repository: goharbor/harbor-core
    tag: {{ .Values.imageTag }}
  replicas: 2
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: noderole.dplplatform
                operator: In
                values:
                  - system
portal:
  image:
    repository: goharbor/harbor-portal
    tag: {{ .Values.imageTag }}
  # Use tolerations
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: noderole.dplplatform
                operator: In
                values:
                  - system
database:
  internal:
    image:
      repository: goharbor/harbor-db
      tag: {{ .Values.imageTag }}
    # Use tolerations
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: noderole.dplplatform
                  operator: In
                  values:
                    - system
redis:
  internal:
    image:
      repository: goharbor/redis-photon
      tag: {{ .Values.imageTag }}
    # Use tolerations
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: noderole.dplplatform
                  operator: In
                  values:
                    - system

# Use Azure blob storage for persistence
persistence:
  persistentVolumeClaim:
    jobservice:
      scanDataExports:
        # The actual size of the disk Azure will give us if we ask for a 1Gi
        size: 4Gi
      jobLog:
        # The actual size of the disk Azure will give us if we ask for a 1Gi
        size: 4Gi
  # It was not possible to change the values below after the initial provisioning
  # as they are stateful sets, but the PVCs has been modified manually to
  # match these values.
  # database:
  #   # The actual size of the disk Azure will give us if we ask for a 1Gi
  #   size: 4Gi
  # redis:
  #   # The actual size of the disk Azure will give us if we ask for a 1Gi
  #   size: 4Gi
  imageChartStorage:
    type: azure
    azure:
      accountname: stdplplat01harborf7b6
      container: harbor
      existingSecret: azure-image-chart-storage-key

